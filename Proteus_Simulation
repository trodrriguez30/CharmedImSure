// Generated by Proteus Visual Designer for Arduino

// Peripheral Configuration Code (Do Not Edit)
//---CONFIG_BEGIN---
#pragma GCC push_options
#pragma GCC optimize ("Os")

#include <core.h> // Required by cpu
#include <cpu.h>
#include <spi.h> // Required by SD1
#include <sd.h> // Required by SD1
#include <filestore.h>
#include <Generic.h>
#include <motor_shield_v1.h>

#pragma GCC pop_options

// Peripheral Constructors
CPU &cpu = Cpu;
GenericBuzzer BUZ1 = GenericBuzzer (6);
GenericLED LED1 = GenericLED (3);
GenericLED LED2 = GenericLED (2);
FileStore &SD1 = FS;
GenericSwitch SW1 = GenericSwitch (34);
GenericSwitch SW2 = GenericSwitch (37);
GenericSwitch SW3 = GenericSwitch (36);
GenericSwitch SW4 = GenericSwitch (35);
GenericButton BTN1 = GenericButton (22);
GenericButton BTN2 = GenericButton (23);
GenericButton BTN3 = GenericButton (24);
GenericButton BTN4 = GenericButton (25);
GenericButton BTN5 = GenericButton (26);
GenericButton BTN6 = GenericButton (27);
GenericButton BTN7 = GenericButton (28);
GenericButton BTN8 = GenericButton (29);
DCMotorV1 M2 = DCMotorV1 (12, 10, 9);
DCMotorV1 M3 = DCMotorV1 (13, 11, 8);
GenericSwitch SW5 = GenericSwitch (38);

void peripheral_setup () {
 SD1.begin (4);
 M2.begin ();
 M3.begin ();
}

void peripheral_loop() {
}
//---CONFIG_END---
// Flowchart Variables
bool var_Main;
double frequency;
double freqArray[20]; 
int arrayIndex = 0;

int Button1 = 22;
int Button2 = 23;
int Button3 = 24;
int Button4 = 25;
int Button5 = 26;
int Button6 = 27;
int Button7 = 28;
int Button8 = 29;

const int Buzzer = 6;

int LED_1 = 3;
int LED_2 = 2;



// Flowchart Routines

// 5 States- Play Live, Record, Play Recording, Stop, Reset
void chart_SETUP() {
   var_Main = true;
   while(var_Main){
      if(SW1()){
	 chart_PlayLive();
      }
      if(SW2()){
	 chart_Record();
      }
      if(SW3()){
	 chart_PlayRecording();
      }
       if(SW4()){
	 chart_Stop(); //IDLE state
      }
       if(SW5()){
	 chart_Reset();
      }
   }
}

void chart_PlayLive() {
   if(BTN1()){ //if button 1 is played it will play a note with a frequency of 110Hz (A2)
      LED1.on();
      tone(Buzzer, 110, 1000); //plays the buzzer for 1 second at 110HZ
      noTone(Buzzer); //stops the buzzer; same for the other buttons
      M3.run(1,255); //runs the motor
   }
   if(!BTN1()){
      LED1.off();
      noTone(Buzzer);
      M3.stop(); //stops the motor
   }
   
   if(BTN2()){ //if button 2 is played it will play a note with a frequency of 123.471Hz (B2)
      LED1.on();
      tone(Buzzer, 123.471, 1000);
      noTone(Buzzer);
      M3.run(1,255);
   }
   if(!BTN2()){
      LED1.off();
      noTone(Buzzer);
      M3.stop();
   }
   
   if(BTN3()){ //if button 3 is played it will play a note with a frequency of 130.813Hz (C3)
      LED1.on();
      tone(Buzzer, 130.813, 1000);
      noTone(Buzzer);
      M3.run(1,255);
   }
   if(!BTN3()){
      LED1.off();
      noTone(Buzzer);
      M3.stop();
   }
   
   if(BTN4()){ //if button 4 is played it will play a note with a frequency of 146.832Hz (D3)
      LED1.on();
      tone(Buzzer, 146.832, 1000);
      noTone(Buzzer);
      M3.run(1,255);
   }
   if(!BTN4()){
      LED1.off();
      noTone(Buzzer);
      M3.stop();
   }
   
   if(BTN5()){ //if button 5 is played it will play a note with a frequency of 164.814Hz (E3)
      LED2.on();
      tone(Buzzer, 164.814, 1000);
      noTone(Buzzer);
      M2.run(1,255); //runs the other motor
   }
   if(!BTN5()){
      LED2.off();
      noTone(Buzzer);
      M2.stop();
   }
   
   if(BTN6()){ //if button 6 is played it will play a note with a frequency of 174.614Hz (F3)
      LED2.on();
      tone(Buzzer, 174.614, 1000);
      noTone(Buzzer);
      M2.run(1,255);
   }
   if(!BTN6()){
      LED2.off();
      noTone(Buzzer);
      M2.stop();
   }
   
   if(BTN7()){ //if button 7 is played it will play a note with a frequency of 195.998Hz (G3)
      LED2.on();
      tone(Buzzer, 195.998, 1000);
      noTone(Buzzer);
      M2.run(1,255);
   }
   if(!BTN7()){
      LED2.off();
      noTone(Buzzer);
      M2.stop();
   }
   
   if(BTN8()){ //if button 8 is played it will play a note with a frequency of 207.652Hz (G#3)
      LED2.on();
      tone(Buzzer, 207.652, 1000);
      noTone(Buzzer);
      M2.run(1,255);
   }
   if(!BTN8()){
      LED2.off();
      noTone(Buzzer);
      M2.stop();
   }
   
   
}

// Records frequencies into an array and updates the index after each note

void chart_Record() {
   if(BTN1()){ //if button 1 is played it will play a note with a frequency of 110Hz (A2)
      frequency= 110; //sets the frequency
      freqArray[arrayIndex] = frequency; //adds the frequency to the list
      arrayIndex++; //increases the index so that you can add a tone to the list
      //Also it allows you to append a tone to the list for when you record
      LED1.on();
      tone(Buzzer, 110, 1000);
      noTone(Buzzer);
      M3.run(1,255);
   }
   if(!BTN1()){
      LED1.off();
      noTone(Buzzer);
      M3.stop();
   }
   
   if(BTN2()){ //if button 2 is played it will play a note with a frequency of 123.471Hz (B2)
      frequency= 123.471;
      freqArray[arrayIndex] = frequency;
      arrayIndex++;
      LED1.on();
      tone(Buzzer, 123.471, 1000);
      noTone(Buzzer);
      M3.run(1,255);
   }
   if(!BTN2()){
      LED1.off();
      noTone(Buzzer);
      M3.stop();
   }
   
   if(BTN3()){ //if button 3 is played it will play a note with a frequency of 130.813Hz (C3)
      frequency= 130.813;
      freqArray[arrayIndex] = frequency;
      arrayIndex++;
      LED1.on();
      tone(Buzzer, 130.813, 1000);
      noTone(Buzzer);
      M3.run(1,255);
   }
   if(!BTN3()){
      LED1.off();
      noTone(Buzzer);
      M3.stop();
   }
   
   if(BTN4()){ //if button 4 is played it will play a note with a frequency of 146.832Hz (D3)
      frequency= 146.832;
      freqArray[arrayIndex] = frequency;
      arrayIndex++;
      LED1.on();
       tone(Buzzer, 146.832, 1000);
      noTone(Buzzer);
      M3.run(1,255);
   }
   if(!BTN4()){
      LED1.off();
      noTone(Buzzer);
      M3.stop();
   }
   
   if(BTN5()){ //if button 5 is played it will play a note with a frequency of 164.814Hz (E3)
      frequency= 164.814;
      freqArray[arrayIndex] = frequency;
      arrayIndex++;
      LED2.on();
      tone(Buzzer, 164.814, 1000);
      noTone(Buzzer);
      M2.run(1,255);
   }
   if(!BTN5()){
      LED2.off();
      noTone(Buzzer);
      M2.stop();
   }
   
   if(BTN6()){ //if button 6 is played it will play a note with a frequency of 174.614Hz (F3)
      frequency= 174.614;
      freqArray[arrayIndex] = frequency;
      arrayIndex++;
      LED2.on();
       tone(Buzzer, 174.614, 1000);
      noTone(Buzzer);
      M2.run(1,255);
   }
   if(!BTN6()){
      LED2.off();
      noTone(Buzzer);
      M2.stop();
   }
   
   if(BTN7()){ //if button 7 is played it will play a note with a frequency of 195.998Hz (G3)
      frequency= 195.998;
      freqArray[arrayIndex] = frequency;
      arrayIndex++;
      LED2.on();
      tone(Buzzer, 195.998, 1000);
      noTone(Buzzer);
      M2.run(1,255);
   }
   if(!BTN7()){
      LED2.off();
      noTone(Buzzer);
      M2.stop();
   }
   
   if(BTN8()){ //if button 8 is played it will play a note with a frequency of 207.652Hz (G#3)
      frequency= 207.652;
      freqArray[arrayIndex] = frequency;
      arrayIndex++;
      LED2.on();
      tone(Buzzer, 207.652, 1000);
      noTone(Buzzer);
      M2.run(1,255);
      }
   if(!BTN8()){
      LED2.off();
      noTone(Buzzer);
      M2.stop();
      }
 }

void chart_PlayRecording() { //runs through the list to play the tones in the frequency array
if (freqArray[0] > 0){
   for (int i = 0; i < 20; i++){
	 if  (freqArray [i] == 207.652 || freqArray[i] == 195.998 || freqArray[i] == 174.614 || freqArray[i] == 164.814){
	       tone(Buzzer, freqArray[i]), 1000;
	       M3.run(1,255);
                   LED2.on();
	       M2.stop();
	       noTone(Buzzer);
	    }	
	 if  (freqArray[i] == 146.832 || freqArray[i] == 130.813|| freqArray[i] ==123.471 || freqArray[i] == 110){
	       tone(Buzzer, freqArray[i]), 1000;
	       M2.run(1,255);
                   LED1.on();
	       M3.stop();
	       noTone(Buzzer);
	    }
	 }	
      }   

}

void chart_Stop() { // stops the motors and buzzers
    noTone(Buzzer);
    M2.stop();
    M3.stop();
    LED1.off();
    LED2.off();
}

void chart_Reset() { // stops the tones, buzzers, and empties the frequency array
    noTone(Buzzer);
    M2.stop();
    M3.stop();
    LED1.off();
    LED2.off();
    for (int i = 0; i < 20; i++){
    freqArray[i]= 0;
    arrayIndex= 0; // sets the index for the frequency array to 0
   }
   
}




// Entry Points and Interrupt Handlers
// Arduino Code




void setup () {
   peripheral_setup();
   chart_SETUP();
   //buzzer output
   pinMode(Buzzer, OUTPUT);
   pinMode(Button1, INPUT);
   pinMode(Button2, INPUT);
   pinMode(Button3, INPUT);
   pinMode(Button4, INPUT);
   pinMode(Button5, INPUT);
   pinMode(Button6, INPUT);
   pinMode(Button7, INPUT);
   pinMode(Button8, INPUT);
   pinMode(LED_1, OUTPUT);
   pinMode(LED_2, OUTPUT);
   
   
 }
void loop () {
   peripheral_loop();
   
 }
 

